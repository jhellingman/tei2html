#summary The Future Plans I have with tei2html.

= Future Features =

I intend, when possible, to add the following to the tei2html tool-set.

  * Support for Customization
  * Support for PDF output via Prince-XML. (Mostly done)
  * Support for ePub output. (Mostly done)
  * Support for XHTML output. (Partly done, for ePub).

== Support for Customization ==

Currently, fairly limited customization options exists, and they are only accessible either via parameters to the stylesheet, or by making changes to the input document or stylesheets themselves. It would be nicer to place the configuration settings for a document into a configuration file, with various adjustable settings.

The file would be named `tei2html.config` and would look something like:

{{{
<tei2html.config>
   <language>en</language>     
   <stylesheet>style.css</stylesheet>         
   <footnoteLocation>Page</footnoteLocation>
</tei2html.config>
}}}


  * Localization
    * language (The language used for generated content, use ISO 639 code, default value of `/TEI.2/text/@lang`)

  * Style
    * stylesheet (path to additional stylesheet to be included)
    * stylesheetLocation (Internal|External) location of external stylesheet, default for HTML Internal, for ePub external)

  * Numbering and Labels
    * generateHeadingLabels (Y|N, default N, assuming they are encoded in TEI as `<head type=label>...</head>`)
    * showLineNumbers (Y|N, show the value of `l/@n`, if present, default Y).
    * showParagraphNumbers (Y|N, show the value of `p/@n`, if present, default N).

  * Images
    * includeImages (Y|N|All|Important, default All)
    * imagePath (path to location of images, default "images")

  * Footnotes
    * footnoteLocation (Paragraph|Page|Chapter|Work, default Chapter)
    * footnotePopup (Y|N, make footnote pop-up in-line, default N).

  * Generated Content
    * colophon (Y|N, default depends on `<divGen type="Colophon"/>`)
    * index (Y|N, default depends on presence of `<divGen type="Index"/>`)
    * contents (Y|N, default depends on presence of `<divGen type="toc"/>`)

  * Pagination
    * pageNumbers (None|Inline|Margin, default Margin)
    * pageImageLinks (Y|N, default N; depends of presence of appropriate `rend` attribute)


Things that can also be handled via CSS:

  * Default table alignment (Left/Right/Center)
  * Default verse alignment (Left/Right/Center)




== Support for print output ==

Currently, some support for print output via PDF with Prince-XML is build in. This needs to be extended and generalized, such that neat paged format media can be produced as PDFs. This is mostly a matter of using appropriate CSS stylesheets, although in a few cases, it is necessary to reorganize elements in the (in this case intermediate) HTML to enable such output (such as footnotes).

== Support for HTML5 ==

This feature has two important aspects.

1. Use of structured elements introduced in HTML5. Currently, Tei2Html already wraps such structured elements with generic `<div>` elements. Replacing those with the corresponding HTML5 elements should do the trick. Note that XSLT 2.0 can only supports XHTML5, not HTML5.

2. Use of CSS3: CCS usage can be changed fairly easily with Tei2Html, so using a customized stylesheet with CSS3 features is already possible. For some usages (print support, aural stylesheets) some changes will be required.

== Support for XHTML ==

Currently, the stylesheet emits normal HTML. It would be nice to be able to generate XHTML as well, but for that, some adjustments are needed to guaranty only valid XHTML is generated. Currently, the tei2html stylesheet relies on the more relaxed validation rules of HTML.

== Support for ePub ==

Basically, the ePub format is a subset of XHTML (with CSS), placed in a ZIP container, and intended to be used on ebook readers. Some of the more advanced features of HTML are lacking, while we also may need to make some adjustments to accommodate the limitations of ebook readers, which often have a small monochrome screen. Also see the [http://code.google.com/p/epub-tools/ epub-tools] project.

Most of the work is done. Some improvements to the CSS stylesheets are still required.

=== A Note on DRM ===

DRM are a misguided attempt dupe end-user from using works to their fullest extend.
I will never include any support for ePub related DRM schemes. Users and re-distributors of this code are gently reminded of section 3 of the GPL, which aims to remove the legal 'stick behind the door' without which DRM schemes would be pointless anyway.

Also note that this code inserts parts of itself into the resulting products (similar to Bison), hence I intend to include a similar exception to the GPL for generated ePub books. However this exception will not except section 3 of the GPL.