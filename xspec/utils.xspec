<?xml version="1.0" encoding="UTF-8"?>

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:f="urn:stylesheet-functions"
               stylesheet="test-tei2html.xsl"
               version="3.0">

    <x:param name="language" as="xs:string" select="'en'"/>

    <x:param name="root" as="document-node(element(TEI.2))" select="self::document-node()">
        <TEI.2 lang="zxx"/>
    </x:param>

    <!-- f:generate-stable-id -->

   <x:scenario label="When determining a stable id for a nested element">
      <x:call function="f:generate-stable-id">
         <x:param select="//hi">
            <text id="base">
                <div1>
                    <p>
                        <hi>target</hi>
                    </p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return a valid id" select="'base_hi_1'"/>
   </x:scenario>

   <x:scenario label="When determining a stable id for a nested element">
      <x:call function="f:generate-stable-id">
         <x:param select="(//hi)[2]">
            <text id="base">
                <div1>
                    <p>
                        <hi>target</hi>
                    </p>
                    <p>
                        <hi>target</hi>
                    </p>
                    <p>
                        <hi>target</hi>
                    </p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return a valid id" select="'base_hi_2'"/>
   </x:scenario>

   <x:scenario label="When determining a stable id for a nested element">
      <x:call function="f:generate-stable-id">
         <x:param select="(//hi)[2]">
            <text id="base">
                <div1>
                    <p>
                        <hi>target</hi>
                    </p>
                    <p id="parent">
                        <hi>target</hi>
                    </p>
                    <p>
                        <hi>target</hi>
                    </p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return a valid id" select="'parent_hi_1'"/>
   </x:scenario>


    <!-- f:generate-id -->

   <x:scenario label="When determining an id for an element with an explicit id">
      <x:call function="f:generate-id">
         <x:param select="(//hi)[2]">
            <text id="base">
                <div1>
                    <p>
                        <hi>target</hi>
                    </p>
                    <p>
                        <hi id="explicit-id">target</hi>
                    </p>
                    <p>
                        <hi>target</hi>
                    </p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return the same id" select="'explicit-id'"/>
   </x:scenario>

   <x:scenario label="When determining an id for an element without an explicit id">
      <x:call function="f:generate-id">
         <x:param select="(//hi)[2]">
            <text id="base">
                <div1>
                    <p>
                        <hi>target</hi>
                    </p>
                    <p>
                        <hi>target</hi>
                    </p>
                    <p>
                        <hi>target</hi>
                    </p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return a newly generated starting with x" test="starts-with(., 'x')"/>
   </x:scenario>

    <!-- f:needs-id -->

   <x:scenario label="When determining whether an element needs an id, when indeed it needs one">
      <x:call function="f:needs-id">
         <x:param select="(//p)[2]">
            <text id="base">
                <div1>
                    <p><ref target="target">link</ref></p>
                    <p id="target">target</p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return true" select="true()"/>
   </x:scenario>

   <x:scenario label="When determining whether an element needs an id, when it doesn't need one">
      <x:call function="f:needs-id">
         <x:param select="(//p)[2]">
            <text id="base">
                <div1>
                    <p>no link</p>
                    <p id="target">target</p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return false" select="false()"/>
   </x:scenario>

    <!-- f:copy-without-ids -->

   <x:scenario label="When copying without ids">
      <x:call function="f:copy-without-ids">
         <x:param select="/">
            <text id="base">
                <div1 id="div1">
                    <p id="first.p">
                        <hi>First</hi>
                    </p>
                    <p id="parent">
                        <hi id="second.hi">Second</hi>
                    </p>
                    <p id="third.p">
                        <hi>Third</hi>
                    </p>
                </div1>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return the same tree without ids">
        <text>
            <div1>
                <p>
                    <hi>First</hi>
                </p>
                <p>
                    <hi>Second</hi>
                </p>
                <p>
                    <hi>Third</hi>
                </p>
            </div1>
        </text>
      </x:expect>
   </x:scenario>

    <!-- f:copy-with-id-prefix -->

   <x:scenario label="When copying with id-prefix">
      <x:call function="f:copy-with-id-prefix">
         <x:param select="/">
            <text id="base">
                <div1 id="div1">
                    <p id="first.p">
                        <hi>First</hi>
                    </p>
                    <p id="parent">
                        <hi id="second.hi">Second</hi>
                    </p>
                    <p id="third.p">
                        <hi>Third</hi>
                    </p>
                </div1>
            </text>
         </x:param>
         <x:param select="'prefix.'"/>
      </x:call>
      <x:expect label="will return the same tree with all ids prefixes">
            <text id="prefix.base">
                <div1 id="prefix.div1">
                    <p id="prefix.first.p">
                        <hi>First</hi>
                    </p>
                    <p id="prefix.parent">
                        <hi id="prefix.second.hi">Second</hi>
                    </p>
                    <p id="prefix.third.p">
                        <hi>Third</hi>
                    </p>
                </div1>
            </text>
      </x:expect>
   </x:scenario>

    <!-- f:get-current-lang -->

   <x:scenario label="When determining the current language">
      <x:call function="f:get-current-lang">
         <x:param select="/text/div[2]/p">
            <text lang="und">
              <div>
                 <p lang="en" id="p1">Hello!</p>
              </div>
              <div>
                 <p lang="it" id="p2">Ciao!</p>
              </div>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return language current at the given node" select="'it'"/>
   </x:scenario>

   <x:scenario label="When determining the current language (specified on ancestor node)">
      <x:call function="f:get-current-lang">
         <x:param select="/text/div[2]/p">
            <text lang="und">
              <div lang="en">
                 <p id="p1">Hello!</p>
              </div>
              <div lang="it">
                 <p id="p2">Ciao!</p>
              </div>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return language current at the given node" select="'it'"/>
   </x:scenario>

   <x:scenario label="When determining the current language (using xml:lang)">
      <x:call function="f:get-current-lang">
         <x:param select="/text/div[2]/p">
            <text xml:lang="und">
              <div xml:lang="en">
                 <p id="p1">Hello!</p>
              </div>
              <div xml:lang="it">
                 <p id="p2">Ciao!</p>
              </div>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return language current at the given node" select="'it'"/>
   </x:scenario>

   <x:scenario label="When determining the current language (none given)">
      <x:call function="f:get-current-lang">
         <x:param select="/text/div[2]/p">
            <text>
              <div xml:lang="en">
                 <p id="p1">Hello!</p>
              </div>
              <div>
                 <p id="p2">Ciao!</p>
              </div>
            </text>
         </x:param>
      </x:call>
      <x:expect label="will return the document language specified on $root" select="'zxx'"/>
   </x:scenario>

</x:description>
