<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x:description [

        <!ENTITY nbsp       "&#160;">
        <!ENTITY zwsp       "&#x200B;">
        <!ENTITY asterism   "&#x2042;">

]>
<x:description xmlns:f="urn:stylesheet-functions"
               xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               stylesheet="test-tei2html.xsl"
               version="3.0">

    <!-- Redefine global variables used in localization.xsl -->
    <x:param name="language" as="xs:string" select="'en'"/>
    <x:param name="root" select="self::document-node()">
        <TEI/>
    </x:param>

    <!-- f:has-class -->

    <x:scenario label="When determining a class value from an empty string">
        <x:call function="f:has-class">
            <x:param select="''"/>
            <x:param select="'red'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return false" select="false()"/>
    </x:scenario>

    <x:scenario label="When determining a class value from a string not containing the class">
        <x:call function="f:has-class">
            <x:param select="'blue'"/>
            <x:param select="'red'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return false" select="false()"/>
    </x:scenario>

    <x:scenario label="When determining a class value from a string containing the class">
        <x:call function="f:has-class">
            <x:param select="'red'"/>
            <x:param select="'red'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return true" select="true()"/>
    </x:scenario>

    <x:scenario label="When determining a class value from a string containing the class">
        <x:call function="f:has-class">
            <x:param select="'red yellow blue'"/>
            <x:param select="'yellow'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return true" select="true()"/>
    </x:scenario>

    <x:scenario label="When determining a class value from a string containing the class">
        <x:call function="f:has-class">
            <x:param select="'class(red)'"/>
            <x:param select="'red'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return true" select="true()"/>
    </x:scenario>

    <x:scenario label="When determining a class value from a string containing the class">
        <x:call function="f:has-class">
            <x:param select="'class(red yellow blue)'"/>
            <x:param select="'yellow'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return true" select="true()"/>
    </x:scenario>

    <!-- f:extract-class-from-rend-ladder -->

    <x:scenario label="When extracting a class value from an empty string">
        <x:call function="f:extract-class-from-rend-ladder">
            <x:param select="''"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return an empty string" select="''"/>
    </x:scenario>

    <x:scenario label="When extracting a class value from a string without a class">
        <x:call function="f:extract-class-from-rend-ladder">
            <x:param select="'vertical-align(center) background-color(red)'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return an empty string" select="''"/>
    </x:scenario>

    <x:scenario label="When extracting a class value from a string with a class">
        <x:call function="f:extract-class-from-rend-ladder">
            <x:param select="'vertical-align(center) class(red) background-color(red)'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return the class" select="'red'"/>
    </x:scenario>

    <x:scenario label="When extracting a class value from a string with a class">
        <x:call function="f:extract-class-from-rend-ladder">
            <x:param select="'vertical-align(center) red background-color(red)'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return the class" select="'red'"/>
    </x:scenario>

    <x:scenario label="When extracting a class value from a string with a class">
        <x:call function="f:extract-class-from-rend-ladder">
            <x:param select="'red vertical-align(center) yellow background-color(red) green'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return the class" select="'red yellow green'"/>
    </x:scenario>

    <x:scenario label="When extracting a class value from a string with a class">
        <x:call function="f:extract-class-from-rend-ladder">
            <x:param select="'red vertical-align(center) class(yellow) background-color(red) green'"/>
            <x:param select="''"/>
        </x:call>
        <x:expect label="will return the class" select="'red yellow green'"/>
    </x:scenario>

    <!-- the presence of rend-attributes results in class attributes on generated elements -->

    <x:scenario label="When converting an element without a rend-attribute (normal mode)">
        <x:context>
            <ab id="p0">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID, but no class.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with a rend-attribute (normal mode)">
        <x:context>
            <ab id="p0" rend="font-size(large)">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and class.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="p0">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with a rend-attribute specifying a class (normal mode)">
        <x:context>
            <ab id="p0" rend="class(red)">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and the specified class.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="red">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with a normal rend-attribute and one specifying a class (normal mode)">
        <x:context>
            <ab id="p0" rend="font-size(large) class(red)">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and both the generated and specified classes.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="red p0">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with a normal rend-attribute and one specifying a (bare) class (normal mode)">
        <x:context>
            <ab id="p0" rend="font-size(large) red">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and both the generated and specified classes.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="red p0">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with single letter (bare) class (normal mode)">
        <x:context>
            <ab id="p0" rend="r">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and both the generated and specified classes.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="r">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with a normal rend-attribute and one specifying a class (normal mode)">
        <x:context>
            <ab id="p0" rend="font-size(large) red class(bright)">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and both the generated and specified classes.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="red bright p0">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an element with a normal rend-attribute and one specifying a class (normal mode; different order)">
        <x:context>
            <ab id="p0" rend="red font-size(large) class(bright)">Just some text</ab>
        </x:context>
        <x:expect label="will result in an element with an ID and both the generated and specified classes.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="red bright p0">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an hi-element (normal mode)">
        <x:context>
            <hi id="p0">Just some text</hi>
        </x:context>
        <x:expect label="will result in an i-element with an ID.">
            <i xmlns="http://www.w3.org/1999/xhtml" id="p0">Just some text</i>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an hi-element with a bold rend-attribute (normal mode)">
        <x:context>
            <hi id="p0" rend="bold">Just some text</hi>
        </x:context>
        <x:expect label="will result in an b-element with an ID.">
            <b xmlns="http://www.w3.org/1999/xhtml" id="p0">Just some text</b>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an hi-element with a non-standard rend-attribute (normal mode)">
        <x:context>
            <hi id="p0" rend="class(green)">Just some text</hi>
        </x:context>
        <x:expect label="will result in an b-element with an ID.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="green">Just some text</span>
        </x:expect>
    </x:scenario>

    <x:scenario label="When converting an hi-element with a non-standard rend-attribute (normal mode)">
        <x:context>
            <hi id="p0" rend="green">Just some text</hi>
        </x:context>
        <x:expect label="will result in an b-element with an ID.">
            <span xmlns="http://www.w3.org/1999/xhtml" id="p0" class="green">Just some text</span>
        </x:expect>
    </x:scenario>

    <!-- convert rendition ladders to CSS -->

    <x:scenario label="When converting a single rendition element to CSS">
        <x:context mode="css">
            <p id="p1" rend="font-size(large)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a CSS rule."
                  test="normalize-space(.) = '.p1 { font-size:large; }'"/>
    </x:scenario>

    <x:scenario label="When converting a single rendition element to CSS with an ID that is invalid in CSS">
        <x:context mode="css">
            <p id="p.1" rend="font-size(large)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a CSS rule with an escaped ID."
                  test="normalize-space(.) = '.p\.1 { font-size:large; }'"/>
    </x:scenario>

    <x:scenario label="When converting two rendition elements to CSS">
        <x:context mode="css">
            <p id="p1" rend="font-size(large) color(red)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a CSS rule with two attributes."
                  test="normalize-space(.) = '.p1 { font-size:large; color:red; }'"/>
    </x:scenario>

    <x:scenario label="When converting a single rendition element plus a class to CSS">
        <x:context mode="css">
            <p id="p1" rend="font-size(large) class(red)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a for the one element CSS rule."
                  test="normalize-space(.) = '.p1 { font-size:large; }'"/>
    </x:scenario>

    <x:scenario label="When converting a two identical rendition elements to CSS">
        <x:context mode="css">
            <p id="p1" rend="font-size(large)">Just a paragraph</p>
            <p id="p2" rend="font-size(large)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a single CSS rule."
                  test="normalize-space(.) = '.p1 { font-size:large; }'"/>
    </x:scenario>

    <x:scenario label="When converting a two different rendition elements to CSS">
        <x:context mode="css">
            <p id="p1" rend="font-size(large)">Just a paragraph</p>
            <p id="p2" rend="font-size(small)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in two CSS rules."
                  test="normalize-space(.) = '.p1 { font-size:large; } .p2 { font-size:small; }'"/>
    </x:scenario>

    <x:scenario label="When converting a  rendition elements with special meaning to CSS">
        <x:context mode="css">
            <p id="p1" rend="font(italic)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in the converted CSS rule."
                  test="normalize-space(.) = '.p1 { font-style:italic; }'"/>
    </x:scenario>

    <x:scenario label="When rendering a paragraph with a bare class in CSS mode">
        <x:context mode="css">
            <p id="p1" rend="red">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in nothing."
                  test="empty($x:result)"/>
    </x:scenario>

    <x:scenario label="When rendering a paragraph with a rend attribute and a bare class in CSS mode">
        <x:context mode="css">
            <p id="p1" rend="font-size(large) red class(bright)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a CSS rule."
                  test="normalize-space(.) = '.p1 { font-size:large; }'"/>
    </x:scenario>

    <x:scenario label="When rendering a paragraph with a rend attribute and a bare class in CSS mode">
        <x:context mode="css">
            <p id="p1" rend="font-size(large) red">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a CSS rule."
                  test="normalize-space(.) = '.p1 { font-size:large; }'"/>
    </x:scenario>

    <x:scenario label="When rendering a paragraph with a bare class and a rend attribute in CSS mode">
        <x:context mode="css">
            <p id="p1" rend="red font-size(large)">Just a paragraph</p>
        </x:context>
        <x:expect label="will result in a CSS rule."
                  test="normalize-space(.) = '.p1 { font-size:large; }'"/>
    </x:scenario>

</x:description>
